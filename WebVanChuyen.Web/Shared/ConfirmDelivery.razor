@using WebVanChuyen.Models.Models
@if (ShowConfirmation)
{
    <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Xác nhận đã giao hàng</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => ClosePopUp()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@DeliveryConfirmValue">
                         <div class="form-group row">
                            <label for="id" class="col-sm-2 col-form-label">Số chứng minh</label>
                            <div class="col-sm-4">
                                <InputText id="id" class="form-control" placeholder="CMND" @bind-Value="DeliveryConfirmValue.ReceiverId" />
                            </div>
                         </div>
                         <div>
                            <b class="text-danger">@ErrorMessage</b>
                         </div>
                    </EditForm>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => OnConfirmationDelivery(false)">Hủy</button>
                    <button type="button" class="btn btn-danger" @onclick="() => OnConfirmationDelivery(true)">Đồng ý</button>
                </div>
            </div>
        </div>
    </div>
}


@code{
    protected bool ShowConfirmation { get; set; }   
    protected string ErrorMessage { get; set; } = string.Empty;
    protected DeliveryConfirm DeliveryConfirmValue { get; set; } = new DeliveryConfirm();

    [Parameter]
    public EventCallback<DeliveryConfirm> DeliveryConfirm { get; set; }

    public void Show(int packageId){
        ShowConfirmation = true;
        DeliveryConfirmValue.PackageId = packageId;

        StateHasChanged();
    }

    protected async Task OnConfirmationDelivery(bool isConfirm)
    {
        if (DeliveryConfirmValue.ReceiverId.Length < 5)
        {
            //ErrorMessage = "Độ dài phải hơn 5 kí tự";
        }
        else
        {
            DeliveryConfirmValue.IsConfirm = isConfirm;
            ShowConfirmation = false;
            await DeliveryConfirm.InvokeAsync(DeliveryConfirmValue);
        }
    }

    protected void ClosePopUp()
    {
        ShowConfirmation = false;
    }
}
